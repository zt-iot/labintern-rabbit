theory rabbit

begin
builtins: natural-numbers


// The signature of our model:



functions: true/0, hash/1, verify/3, snd/1, fst/1, dec/2, sign/2, enc/2, pk/1
equations: verify(sign(loc_1, loc_0), loc_1, pk(loc_0))=true(), dec(enc(loc_1, loc_0), loc_0)=loc_1, snd(<loc_1, loc_0>)=loc_0, fst(<loc_1, loc_0>)=loc_1

// Initializing the gloval constants and access policy rules:




// Global Constants:


rule Const_auth_pubk : [Fr(auth_pubk)]--[Init_('rab_Const_auth_pubk'), Init_(<'rab_Const_auth_pubk', auth_pubk>), !Const_('rab_auth_pubk', auth_pubk)]->[!Const_('rab_auth_pubk', auth_pubk)] 

rule Const_auth_privk : [Fr(auth_privk)]--[Init_('rab_Const_auth_privk'), Init_(<'rab_Const_auth_privk', auth_privk>), !Const_('rab_auth_privk', auth_privk)]->[!Const_('rab_auth_privk', auth_privk)] 

rule Const_tls_symk : [Fr(tls_symk)]--[Init_('rab_Const_tls_symk'), Init_(<'rab_Const_tls_symk', tls_symk>), !Const_('rab_tls_symk', tls_symk)]->[!Const_('rab_tls_symk', tls_symk)] 


// Parametric global Constants:



// Access control:


rule Init_system[role="system"] : []--[Init_('rab_system')]->[State_Client(<'rab___0', 'rab_rab', %1>, 'rab_', 'rab_', 'rab_', 'rab_'), State_DNScache(<'rab___0', 'rab_rab', %1>, 'rab_', 'rab_', 'rab_', 'rab_'), State_DNSauth(<'rab___0', 'rab_rab', %1>, 'rab_', 'rab_', 'rab_', 'rab_'), !ACP_GEN_('rab_system_', 'rab_rab')] 

rule Init_system_ACP_0[role="system"] : [!ACP_GEN_('rab_system_', 'rab_rab')]--[Init_('rab_system_ACP_0')]->[!ACP_(<'rab_DNSauth', 'rab_rab'>, 'rab_ch_cache2auth', 'rab_recv')] 

rule Init_system_ACP_1[role="system"] : [!ACP_GEN_('rab_system_', 'rab_rab')]--[Init_('rab_system_ACP_1')]->[!ACP_(<'rab_DNSauth', 'rab_rab'>, 'rab_ch_cache2auth', 'rab_send')] 

rule Init_system_ACP_2[role="system"] : [!ACP_GEN_('rab_system_', 'rab_rab')]--[Init_('rab_system_ACP_2')]->[!ACP_(<'rab_DNSauth', 'rab_rab'>, 'rab_ch_auth2cache', 'rab_recv')] 

rule Init_system_ACP_3[role="system"] : [!ACP_GEN_('rab_system_', 'rab_rab')]--[Init_('rab_system_ACP_3')]->[!ACP_(<'rab_DNSauth', 'rab_rab'>, 'rab_ch_auth2cache', 'rab_send')] 

rule Init_system_ACP_4[role="system"] : [!ACP_GEN_('rab_system_', 'rab_rab')]--[Init_('rab_system_ACP_4')]->[!ACP_(<'rab_DNScache', 'rab_rab'>, 'rab_ch_client2cache', 'rab_recv')] 

rule Init_system_ACP_5[role="system"] : [!ACP_GEN_('rab_system_', 'rab_rab')]--[Init_('rab_system_ACP_5')]->[!ACP_(<'rab_DNScache', 'rab_rab'>, 'rab_ch_client2cache', 'rab_send')] 

rule Init_system_ACP_6[role="system"] : [!ACP_GEN_('rab_system_', 'rab_rab')]--[Init_('rab_system_ACP_6')]->[!ACP_(<'rab_DNScache', 'rab_rab'>, 'rab_ch_cache2client', 'rab_recv')] 

rule Init_system_ACP_7[role="system"] : [!ACP_GEN_('rab_system_', 'rab_rab')]--[Init_('rab_system_ACP_7')]->[!ACP_(<'rab_DNScache', 'rab_rab'>, 'rab_ch_cache2client', 'rab_send')] 

rule Init_system_ACP_8[role="system"] : [!ACP_GEN_('rab_system_', 'rab_rab')]--[Init_('rab_system_ACP_8')]->[!ACP_(<'rab_DNScache', 'rab_rab'>, 'rab_ch_cache2auth', 'rab_recv')] 

rule Init_system_ACP_9[role="system"] : [!ACP_GEN_('rab_system_', 'rab_rab')]--[Init_('rab_system_ACP_9')]->[!ACP_(<'rab_DNScache', 'rab_rab'>, 'rab_ch_cache2auth', 'rab_send')] 

rule Init_system_ACP_10[role="system"] : [!ACP_GEN_('rab_system_', 'rab_rab')]--[Init_('rab_system_ACP_10')]->[!ACP_(<'rab_DNScache', 'rab_rab'>, 'rab_ch_auth2cache', 'rab_recv')] 

rule Init_system_ACP_11[role="system"] : [!ACP_GEN_('rab_system_', 'rab_rab')]--[Init_('rab_system_ACP_11')]->[!ACP_(<'rab_DNScache', 'rab_rab'>, 'rab_ch_auth2cache', 'rab_send')] 

rule Init_system_ACP_12[role="system"] : [!ACP_GEN_('rab_system_', 'rab_rab')]--[Init_('rab_system_ACP_12')]->[!ACP_(<'rab_Client', 'rab_rab'>, 'rab_ch_cache2client', 'rab_recv')] 

rule Init_system_ACP_13[role="system"] : [!ACP_GEN_('rab_system_', 'rab_rab')]--[Init_('rab_system_ACP_13')]->[!ACP_(<'rab_Client', 'rab_rab'>, 'rab_ch_cache2client', 'rab_send')] 

rule Init_system_ACP_14[role="system"] : [!ACP_GEN_('rab_system_', 'rab_rab')]--[Init_('rab_system_ACP_14')]->[!ACP_(<'rab_Client', 'rab_rab'>, 'rab_ch_client2cache', 'rab_recv')] 

rule Init_system_ACP_15[role="system"] : [!ACP_GEN_('rab_system_', 'rab_rab')]--[Init_('rab_system_ACP_15')]->[!ACP_(<'rab_Client', 'rab_rab'>, 'rab_ch_client2cache', 'rab_send')] 

// Model:  Client



rule Client_merged___0___4_56[role="Client"] : [State_Client(<'rab___0', param, %v_>, return_var_0, 'rab_', 'rab_', 'rab_'), !Const_('rab_tls_symk', tls_symk_2)]--[Transition_(<'rab_Client', param>, 'rab___0', %v_), ClientSendQuery('rab_example.com')]->[State_Client(<'rab___4', param, %v_>, 'rab_', 'rab_', <enc(<'rab_example.com', hash('rab_example.com')>, tls_symk_2), hash('rab_example.com'), 'rab_example.com'>, 'rab_')] 

rule Client_merged___4___6_0_0_53[role="Client"] : [State_Client(<'rab___4', param, %v_>, return_var_4, 'rab_', <l_0_4, l_1_4, l_2_4>, 'rab_'), !ACP_(<'rab_Client', param>, 'rab_ch_client2cache', 'rab_send')]--[Transition_(<'rab_Client', param>, 'rab___4', %v_)]->[State_Client(<'rab___6_0_0', param, %v_>, 'rab_', 'rab_', <'rab_ch_cache2client', 'rab_', l_0_4, l_1_4, l_2_4>, 'rab_'), Store('rab_ch_client2cache', l_0_4)] 

rule Client_merged___6_0_0___18_49[role="Client"] : [State_Client(<'rab___6_0_0', param, %v_>, return_var_9, 'rab_', <l_0_9, l_1_9, l_2_9, l_3_9, l_4_9>, 'rab_'), !Const_('rab_tls_symk', tls_symk_13), !ACP_(<'rab_Client', param>, l_0_9, 'rab_recv'), Store(l_0_9, n_0_9)]--[Transition_(<'rab_Client', param>, 'rab___6_0_0', %v_), ClientRecvResponse(fst(fst(dec(n_0_9, tls_symk_13))), snd(fst(dec(n_0_9, tls_symk_13)))), Eq_(snd(dec(n_0_9, tls_symk_13)), hash(fst(dec(n_0_9, tls_symk_13))))]->[State_Client(<'rab___18', param, %v_>, 'rab_', 'rab_', 'rab_', 'rab_')] 


// Model:  DNScache



rule DNScache_merged___0___1_1_0_117[role="DNScache"] : [State_DNScache(<'rab___0', param, %v_>, return_var_0, 'rab_', 'rab_', 'rab_')]--[Transition_(<'rab_DNScache', param>, 'rab___0', %v_)]->[State_DNScache(<'rab___1_1_0', param, %v_>, 'rab_', 'rab_', <'rab_ch_client2cache', 'rab_'>, 'rab_')] 

rule DNScache_merged___0___1_0_0_116[role="DNScache"] : [State_DNScache(<'rab___0', param, %v_>, return_var_0, 'rab_', 'rab_', 'rab_')]--[Transition_(<'rab_DNScache', param>, 'rab___0', %v_)]->[State_DNScache(<'rab___1_0_0', param, %v_>, 'rab_', 'rab_', <'rab_ch_client2cache', 'rab_'>, 'rab_')] 

rule DNScache_merged___1_1_0___2_115[role="DNScache"] : [State_DNScache(<'rab___1_1_0', param, %v_>, return_var_2, 'rab_', <l_0_2, l_1_2>, 'rab_'), !ACP_(<'rab_DNScache', param>, l_0_2, 'rab_recv'), In(n_1_2), Store(l_0_2, n_0_2)]--[Transition_(<'rab_DNScache', param>, 'rab___1_1_0', %v_)]->[State_DNScache(<'rab___2', param, %v_>, 'rab_', 'rab_', n_1_2, 'rab_')] 

rule DNScache_merged___1_0_0___2_112[role="DNScache"] : [State_DNScache(<'rab___1_0_0', param, %v_>, return_var_7, 'rab_', <l_0_7, l_1_7>, 'rab_'), !ACP_(<'rab_DNScache', param>, l_0_7, 'rab_recv'), Store(l_0_7, n_0_7)]--[Transition_(<'rab_DNScache', param>, 'rab___1_0_0', %v_)]->[State_DNScache(<'rab___2', param, %v_>, 'rab_', 'rab_', n_0_7, 'rab_')] 

rule DNScache_merged___2___5_0_1_109[role="DNScache"] : [State_DNScache(<'rab___2', param, %v_>, return_var_11, 'rab_', l_0_11, 'rab_'), !ACP_(<'rab_DNScache', param>, 'rab_ch_cache2auth', 'rab_send'), !Const_('rab_tls_symk', tls_symk_11)]--[Transition_(<'rab_DNScache', param>, 'rab___2', %v_), Eq_(snd(dec(l_0_11, tls_symk_11)), hash(fst(dec(l_0_11, tls_symk_11))))]->[State_DNScache(<'rab___5_0_1', param, %v_>, 'rab_', 'rab_', <fst(dec(l_0_11, tls_symk_11)), snd(dec(l_0_11, tls_symk_11)), dec(l_0_11, tls_symk_11), l_0_11>, 'rab_'), Store('rab_ch_cache2auth', fst(dec(l_0_11, tls_symk_11))), Out(fst(dec(l_0_11, tls_symk_11)))] 

rule DNScache_merged___2___5_0_1_108[role="DNScache"] : [State_DNScache(<'rab___2', param, %v_>, return_var_11, 'rab_', l_0_11, 'rab_'), !ACP_(<'rab_DNScache', param>, 'rab_ch_cache2auth', 'rab_send'), !Const_('rab_tls_symk', tls_symk_11)]--[Transition_(<'rab_DNScache', param>, 'rab___2', %v_), Eq_(snd(dec(l_0_11, tls_symk_11)), hash(fst(dec(l_0_11, tls_symk_11))))]->[State_DNScache(<'rab___5_0_1', param, %v_>, 'rab_', 'rab_', <fst(dec(l_0_11, tls_symk_11)), snd(dec(l_0_11, tls_symk_11)), dec(l_0_11, tls_symk_11), l_0_11>, 'rab_'), Store('rab_ch_cache2auth', fst(dec(l_0_11, tls_symk_11)))] 

rule DNScache_merged___5_0_1___7_0_0_97[role="DNScache"] : [State_DNScache(<'rab___5_0_1', param, %v_>, return_var_21, 'rab_', <l_0_21, l_1_21, l_2_21, l_3_21>, 'rab_')]--[Transition_(<'rab_DNScache', param>, 'rab___5_0_1', %v_)]->[State_DNScache(<'rab___7_0_0', param, %v_>, 'rab_', 'rab_', <'rab_ch_auth2cache', 'rab_', l_0_21, l_1_21, l_2_21, l_3_21>, 'rab_')] 

rule DNScache_merged___5_0_1___7_1_0_96[role="DNScache"] : [State_DNScache(<'rab___5_0_1', param, %v_>, return_var_21, 'rab_', <l_0_21, l_1_21, l_2_21, l_3_21>, 'rab_')]--[Transition_(<'rab_DNScache', param>, 'rab___5_0_1', %v_)]->[State_DNScache(<'rab___7_1_0', param, %v_>, 'rab_', 'rab_', <'rab_ch_auth2cache', 'rab_', l_0_21, l_1_21, l_2_21, l_3_21>, 'rab_')] 

rule DNScache_merged___7_1_0___11_0_1_93[role="DNScache"] : [State_DNScache(<'rab___7_1_0', param, %v_>, return_var_24, 'rab_', <l_0_24, l_1_24, l_2_24, l_3_24, l_4_24, l_5_24>, 'rab_'), !Const_('rab_auth_pubk', auth_pubk_35), !ACP_(<'rab_DNScache', param>, l_0_24, 'rab_recv'), In(n_1_24), Store(l_0_24, n_0_24)]--[Transition_(<'rab_DNScache', param>, 'rab___7_1_0', %v_), Cached(l_2_24, fst(n_1_24)), Eq_(verify(snd(n_1_24), fst(n_1_24), auth_pubk_35), true())]->[State_DNScache(<'rab___11_0_1', param, %v_>, 'rab_', 'rab_', <verify(snd(n_1_24), fst(n_1_24), auth_pubk_35), snd(n_1_24), fst(n_1_24), n_1_24, l_2_24, l_3_24, l_4_24, l_5_24>, 'rab_')] 

rule DNScache_merged___7_0_0___11_0_1_89[role="DNScache"] : [State_DNScache(<'rab___7_0_0', param, %v_>, return_var_29, 'rab_', <l_0_29, l_1_29, l_2_29, l_3_29, l_4_29, l_5_29>, 'rab_'), !Const_('rab_auth_pubk', auth_pubk_35), !ACP_(<'rab_DNScache', param>, l_0_29, 'rab_recv'), Store(l_0_29, n_0_29)]--[Transition_(<'rab_DNScache', param>, 'rab___7_0_0', %v_), Cached(l_2_29, fst(n_0_29)), Eq_(verify(snd(n_0_29), fst(n_0_29), auth_pubk_35), true())]->[State_DNScache(<'rab___11_0_1', param, %v_>, 'rab_', 'rab_', <verify(snd(n_0_29), fst(n_0_29), auth_pubk_35), snd(n_0_29), fst(n_0_29), n_0_29, l_2_29, l_3_29, l_4_29, l_5_29>, 'rab_')] 

rule DNScache_merged___11_0_1___20_81[role="DNScache"] : [State_DNScache(<'rab___11_0_1', param, %v_>, return_var_38, 'rab_', <l_0_38, l_1_38, l_2_38, l_3_38, l_4_38, l_5_38, l_6_38, l_7_38>, 'rab_'), !ACP_(<'rab_DNScache', param>, 'rab_ch_cache2client', 'rab_send'), !Const_('rab_tls_symk', tls_symk_40)]--[Transition_(<'rab_DNScache', param>, 'rab___11_0_1', %v_)]->[State_DNScache(<'rab___20', param, %v_>, 'rab_', 'rab_', 'rab_', 'rab_'), Store('rab_ch_cache2client', enc(<<l_4_38, l_2_38>, hash(<l_4_38, l_2_38>)>, tls_symk_40))] 

rule DNScache_merged___11_0_1___20_80[role="DNScache"] : [State_DNScache(<'rab___11_0_1', param, %v_>, return_var_38, 'rab_', <l_0_38, l_1_38, l_2_38, l_3_38, l_4_38, l_5_38, l_6_38, l_7_38>, 'rab_'), !ACP_(<'rab_DNScache', param>, 'rab_ch_cache2client', 'rab_send'), !Const_('rab_tls_symk', tls_symk_40)]--[Transition_(<'rab_DNScache', param>, 'rab___11_0_1', %v_)]->[State_DNScache(<'rab___20', param, %v_>, 'rab_', 'rab_', 'rab_', 'rab_'), Store('rab_ch_cache2client', enc(<<l_4_38, l_2_38>, hash(<l_4_38, l_2_38>)>, tls_symk_40)), Out(enc(<<l_4_38, l_2_38>, hash(<l_4_38, l_2_38>)>, tls_symk_40))] 


// Model:  DNSauth



rule DNSauth_merged___1___10_0_0_72[role="DNSauth"] : [State_DNSauth(<'rab___1', param, %v_>, return_var_1, 'rab_', 'rab_', 'rab_'), File_DNSauth(param, loc_0, n_0_4), !ACP_(<'rab_DNSauth', param>, 'rab__data_record', 'rab_fopen'), !ACP_(<'rab_DNSauth', param>, 'rab__data_record', 'rab_fopen'), Fr(n_0_5)]--[Transition_(<'rab_DNSauth', param>, 'rab___1', %v_), Record(fst(n_0_13), snd(n_0_13)), Eq_(n_0_4, n_0_13)]->[State_DNSauth(<'rab___10_0_0', param, %v_>, 'rab_', 'rab_', <'rab_ch_cache2auth', 'rab_', snd(n_0_13), fst(n_0_13), n_0_13, n_0_5>, 'rab__data_record'), File_DNSauth(param, loc_0, n_0_4), Fd_DNSauth(param, n_0_5, n_0_13)] 

rule DNSauth_merged___10_0_0___17_52[role="DNSauth"] : [State_DNSauth(<'rab___10_0_0', param, %v_>, return_var_22, 'rab_', <l_0_22, l_1_22, l_2_22, l_3_22, l_4_22, l_5_22>, t_0_22), !Const_('rab_auth_privk', auth_privk_27), !ACP_(<'rab_DNSauth', param>, 'rab_ch_auth2cache', 'rab_send'), !ACP_(<'rab_DNSauth', param>, l_0_22, 'rab_recv'), Store(l_0_22, n_0_22)]--[Transition_(<'rab_DNSauth', param>, 'rab___10_0_0', %v_), Eq_(n_0_22, l_3_22)]->[State_DNSauth(<'rab___17', param, %v_>, 'rab_', 'rab_', 'rab_', t_0_22), Store('rab_ch_auth2cache', <l_2_22, sign(l_2_22, auth_privk_27)>)] 

rule DNSauth_init_filesys___0___1_0[role="DNSauth"] : [State_DNSauth(<'rab___0', param, %v_>, return_var_0, 'rab_', 'rab_', 'rab_')]--[Transition_(<'rab_DNSauth', param>, 'rab___0', %v_)]->[State_DNSauth(<'rab___1', param, %v_>, 'rab_', 'rab_', 'rab_', 'rab_'), File_DNSauth(param, 'rab__data_record', <'rab_example.com', 'rab_192.0.2.1'>), !ACP_(<'rab_DNSauth', param>, 'rab__data_record', 'rab_fclose'), !ACP_(<'rab_DNSauth', param>, 'rab__data_record', 'rab_fread'), !ACP_(<'rab_DNSauth', param>, 'rab__data_record', 'rab_fopen')] 

restriction Init_ : " All x #i #j . Init_(x) @ #i & Init_(x) @ #j ==> #i = #j "
restriction Equality_rule: "All x y #i. Eq_(x,y) @ #i ==> x = y"
restriction NEquality_rule: "All x #i. NEq_(x,x) @ #i ==> F"
lemma AlwaysStarts_[reuse,use_induction]:

      "All x p #i. Loop_Back(x, p) @i ==> Ex #j. Loop_Start(x, p) @j & j < i"
lemma AlwaysStartsWhenEnds_[reuse,use_induction]:

      "All x p #i. Loop_Finish(x, p) @i ==> Ex #j. Loop_Start(x, p) @j & j < i"
lemma TransitionOnce_[reuse,use_induction]:

      "All x p %i #j #k . Transition_(x, p, %i) @#j &
        Transition_(x, p, %i) @ #k ==> #j = #k"

lemma z : all-traces "All new_0 new_1 #time_1 . ClientRecvResponse(new_1, new_0)@#time_1 ==> Ex  #time_2 . Record(new_1, new_0)@#time_2 & #time_2 < #time_1 "
lemma y : all-traces "All new_0 new_1 #time_1 . ClientRecvResponse(new_1, new_0)@#time_1 ==> Ex  #time_2 . Cached(new_1, new_0)@#time_2 & #time_2 < #time_1 "
lemma x : all-traces "All new_0 new_1 #time_1 . Cached(new_1, new_0)@#time_1 ==> Ex  #time_2 . Record(new_1, new_0)@#time_2 & #time_2 < #time_1 "
end

